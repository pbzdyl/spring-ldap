<?xml version="1.0" encoding="UTF-8"?>
<chapter id="configuration">
  <title>Configuration</title>

  <sect1 id="context-source-configuration">
    <title>ContextSource Configuration</title>

    <para>There are several properties in <literal>AbstractContextSource</literal>
    (superclass of <literal>DirContextSource</literal> and <literal>LdapContextSource</literal>)
     that can be used to modify its beahaviour.</para>

    <sect2 id="dir-context-url">
      <title>LDAP Server URLs</title>
      
      <para>The URL of the LDAP server is specified using the <literal>url</literal> property.
      The URL should be in the format <literal>ldap://myserver.example.com:389</literal>.
      For SSL access, use the <literal>ldaps</literal> protocol and the appropriate port, e.g.
      <literal>ldaps://myserver.example.com:636</literal></para>
      <para>It is possible to configure multiple alternate LDAP servers using the
      <literal>urls</literal> property. In this case, supply all server urls in a String
      array to the <literal>urls</literal> property.</para>
    </sect2>

    <sect2 id="dir-context-authentication">
      <title>Authentication</title>

      <para>Authenticated contexts are created for both read-only and
      read-write operations by default. You specify
      <literal>userName</literal> and <literal>password</literal> of the LDAP
      user to be used for authentication on the
      <literal>ContextSource</literal>.</para>

      <para><note>
          <para>The <literal>userName</literal> needs to be the full
          Distinguished Name (DN) of the user.</para>
        </note></para>

      <para>Some LDAP server setups allow anonymous read-only access. If you
      want to use anonymous Contexts for read-only operations, set the
      <literal>anonymousReadOnly</literal> property to
      <literal>true</literal>.<literal></literal></para>

      <sect3>
        <title>Custom Authentication Using Acegi</title>

        <para>While the user name (i.e. user DN) and password used for
        creating an authenticated <literal>Context</literal> are static by
        default - the ones set on the <literal>ContextSource</literal> on
        startup will be used throughout the lifetime of the
        <literal>ContextSource</literal> - there are however several cases in
        which this is not the desired behaviour. A common scenario is that the
        principal and credentials of the current user should be used when
        executing LDAP operations for that user. The default behaviour can be
        modified by supplying a custom <literal>AuthenticationSource</literal>
        implementation to the <literal>ContextSource</literal> on startup,
        instead of explicitly specifying the <literal>userName</literal> and
        <literal>password</literal>. The
        <literal>AuthenticationSource</literal> will be queried by the
        <literal>ContextSource</literal> for principal and credentials each
        time an authenticated <literal>Context</literal> is to be
        created.</para>

        <para>To use the authentication information of the currently logged in
        user using <ulink url="http://acegisecurity.org/">Acegi
        Security</ulink>, use the
        <literal>AcegiAuthenticationSource</literal>:</para>

        <example>
          <title>The Spring bean definition for an
          AcegiAuthenticationSource</title>

          <programlisting>&lt;beans&gt;
   ...
   &lt;bean id="contextSource" class="org.springframework.ldap.support.LdapContextSource"&gt;
      &lt;property name="url" value="ldap://localhost:389" /&gt;
      &lt;property name="base" value="dc=example,dc=com" /&gt;
      &lt;property name="acegiAuthenticationSource" ref="authenticationSource" /&gt;
   &lt;/bean&gt;

   &lt;bean id="acegiAuthenticationSource"
      class="org.springframework.ldap.support.authentication.AcegiAuthenticationSource" /&gt;
   ...
&lt;/beans&gt;</programlisting>
        </example>

        <note>
          <para>We don't specify any <literal>userName</literal> or
          <literal>password</literal> to our <literal>ContextSource</literal>
          when using an <literal>AuthenticationSource</literal> - these
          properties are needed only when the default behaviour is
          used.</para>
        </note>

        <note>
          <para>When using the <literal>AcegiAuthenticationSource</literal>
          you need to use Acegi's
          <literal>LdapAuthenticationProvider</literal> to authenticate the
          users against LDAP.</para>
        </note>
      </sect3>

      <sect3>
        <title>Default Authentication</title>

        <para>When using <literal>AcegiAuthenticationSource</literal>,
        authenticated contexts will only be possible to create once the user
        is logged in using Acegi. To use default authentication information
        when no user is logged in, use the
        <literal>DefaultValuesAuthenticationSourceDecorator</literal>:</para>

        <example>
          <title>Configuring a
          DefaultValuesAuthenticationSourceDecorator</title>

          <programlisting>&lt;beans&gt;
   ...
   &lt;bean id="contextSource" class="org.springframework.ldap.support.LdapContextSource"&gt;
      &lt;property name="url" value="ldap://localhost:389" /&gt;
      &lt;property name="base" value="dc=example,dc=com" /&gt;
      &lt;property name="authenticationSource" ref="authenticationSource" /&gt;
   &lt;/bean&gt;

   &lt;bean id="authenticationSource"
      class="org.springframework.ldap.support.DefaultValuesAuthenticationSourceDecorator"&gt;
      &lt;property name="target" ref="acegiAuthenticationSource" /&gt;
      &lt;property name="defaultUser" value="cn=myDefaultUser" /&gt;
      &lt;property name="defaultPassword" value="pass" /&gt;
   &lt;/bean&gt;

   &lt;bean id="acegiAuthenticationSource"
      class="org.springframework.ldap.support.authentication.AcegiAuthenticationSource" /&gt;
   ...
&lt;/beans&gt;</programlisting>
        </example>
      </sect3>
    </sect2>

    <sect2 id="context-source-pooling">
      <title>Pooling</title>

      <para>LDAP connection pooling can be turned on/off using the
      <literal>pooled</literal> flag. Default is <literal>true</literal>. The
      configuration of LDAP connection pooling is managed using
      <literal>System</literal> properties, so this needs to be handled
      manually. Details of pooling configuration can be found <ulink
      url="http://java.sun.com/products/jndi/tutorial/ldap/connect/config.html">here</ulink>.</para>
      
    </sect2>
    <sect2 id="context-source-advanced">
      <title>Advanced ContextSource Configuration</title>
      <sect3 id="context-source-context-factory">
        <title>Alternate ContextFactory</title>

        <para>It is possible to configure the <literal>ContextFactory</literal> that the
        <literal>ContextSource</literal> is to use when creating Contexts using the
        <literal>contextFactory</literal> property. The default value is
        <literal>com.sun.jndi.ldap.LdapCtxFactory</literal>.</para>
      </sect3>
      <sect3 id="context-source-object-factory">
        <title>Custom DirObjectFactory</title>

        <para>As described in <xref linkend="dirobjectfactory" />, a <literal>DirObjectFactory</literal>
        can be used to translate the <literal>Attributes</literal> of found Contexts
        to a more useful <literal>DirContext</literal> implementation. This can be
        configured using the <literal>dirObjectFactory</literal> property. You can use
        this property if you have your own, custom <literal>DirObjectFactory</literal> implementation.</para>
        <para>The default value is <literal>DefaultDirObjectFactory</literal>.</para>
      </sect3>
      <sect3 id="context-source-custom-env-properties">
        <title>Custom DirContext Environment Properties</title>

        <para>In some cases the user might want to specify additional environment setup properties
        in addition to the ones directly configurable from <literal>AbstractContextSource</literal>.
        Such properties should be set in a <literal>Map</literal> and supplied to 
        the <literal>baseEnvironmentProperties</literal> property.</para>
      </sect3>
    </sect2>
  </sect1>
  <sect1 id="ldap-template-configuration">
    <title>LdapTemplate Configuration</title>
    
	<sect2 id="ldap-template-ignore-partial-result">
	  <title>Ignoring PartialResultExceptions</title>
	  
	  <para>Some Active Directory (AD) servers are unable to automatically following
	  referrals, which often leads to a <literal>PartialResultException</literal> being
	  thrown in searches. You can specify that <literal>PartialResultException</literal>
	  is to be ignored by setting the <literal>ignorePartialResultException</literal>
	  property to <literal>true</literal>.
	  <note>This causes all referrals to be ignored, and no notice will be given that
	  a <literal>PartialResultException</literal> has been encountered.
	  There is currently no way of manually following referrals using LdapTemplate.</note></para>
	</sect2>
  </sect1>
</chapter>